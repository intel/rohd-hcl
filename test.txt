CubulonSpec {
    ComponentASpec,
    ComponentBSpec {
        [ComponentCSpec], [ComponentDSpec {
            [ComponentESpec]
        }]
    }
}

[
    [ALU, f.f..],
    [a, b, ],
    [f],
    [ff, a]
]
[
 [ALU.new, FPU.new]
]

Executor (InputStuff)


CubulonSpec(componentASpec: ComponetASpec(() => MyComponentA()), componentBSpec: ComponentBSpec(componentCs: [
ComponentCSpec
]))


ALU extends Executor

(inputStuff, outputStuff) {
    ALU().connectInputStuff(inputStuff).connectOutputStuff(outputStuff)
}


class SchedulerID {
    final int _index
}

let config = 

let schedulerA = config.newSchedulerConfig(MyScheduler.new);
let schedulerB = config.newSchedulerConfig(MyOtherScheduler.new);
let schedulerC = config.newSchedulerConfig(MyThirdScheduler.new);
let schedulerC = config.newSchedulerConfig();


let esources = config.resourcesConfig([
 (foo, schedulerA)
])
